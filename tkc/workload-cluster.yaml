apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: workload-vsphere-tkg1
spec:
  clusterNetwork:
    apiServerPort: 6443
    pods:
      cidrBlocks: ["192.168.32.0/20"]
    serviceDomain: "cluster.local"
    services:
      cidrBlocks: ["192.168.0.0/20"]
#  paused: false
  topology:
    class: builtin-generic-v3.1.0
    version: v1.31.1---vmware.2-fips-vkr.2
    controlPlane:
#      machineHealthCheck:
#        enable: true
#        maxUnhealthy: 100%
#        nodeStartupTimeout: 4h0m0s
#        unhealthyConditions:
#        - status: Unknown
#          timeout: 5m0s
#          type: Ready
#       - status: "False"
#          timeout: 12m0s
#          type: Ready
      metadata:
        annotations:
          run.tanzu.vmware.com/resolve-os-image: os-name=ubuntu
        labels:
          my-custom-label-key: my-custom-label-value
#      nodeDeletionTimeout: "10s"
#      nodeDrainTimeout: "0s"
#      nodeVolumeDetachTimeout: "0s"
      replicas: 1
    workers:
      machineDeployments:
      - class: node-pool
        metadata:
          annotations:
            cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "3"
            cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "1"
            run.tanzu.vmware.com/resolve-os-image: os-name=ubuntu
          labels:
            my-custom-label-key: my-custom-label-value
        minReadySeconds: 0
        name: node-pool-1
        variables:
          overrides:
          - name: vmClass
            value: best-effort-medium
          - name: nodePoolLabels
            value: [{ "key": "my-nodepool-name", "value": "node-pool-1" }]
      - class: node-pool
        metadata:
          annotations:
            cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "3"
            cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"
            run.tanzu.vmware.com/resolve-os-image: os-name=ubuntu
          labels:
            my-custom-label-key: my-custom-label-value
        name: node-pool-2
        variables:
          overrides:
          - name: vmClass
            value: best-effort-medium
          - name: nodePoolLabels
            value: [{ "key": "my-nodepool-name", "value": "node-pool-2" }]
      - class: node-pool
        metadata:
          annotations:
            cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "3"
            cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"
            run.tanzu.vmware.com/resolve-os-image: os-name=ubuntu
          labels:
            my-custom-label-key: my-custom-label-value
        name: node-pool-3
        variables:
          overrides:
          - name: vmClass
            value: best-effort-medium
          - name: nodePoolLabels
            value: [{ "key": "my-nodepool-name", "value": "node-pool-3" }]
    variables:
      - name: clusterEncryptionConfigYaml
        value: |
          apiVersion: apiserver.config.k8s.io/v1
          kind: EncryptionConfiguration
          resources:
            - resources:
                - secrets
              providers:
                - aescbc:
                    keys:
                      - name: key1
                        secret: QiMgJGYXudtljldVyl+AnXQQlk7r9iUXBfVKqdEfKm8=
                - identity: {}
      - name: controlPlaneCertificateRotation
        value:
          daysBefore: 90
      - name: controlPlaneVolumes
        value:
        - capacity:
            storage: "15Gi"
          mountPath: "/var/lib/containerd"
          name: containerd
          storageClass: tanzu
        - capacity:
            storage: "15Gi"
          mountPath: "/var/lib/kubelet"
          name: kubelet
          storageClass: tanzu
      - name: defaultStorageClass
        value: tanzu
      - name: nodePoolLabels
        value:
          - key: "my-nodepool-key"
            value: "my-nodepool-value"
      - name: nodePoolVolumes
        value:
        - capacity:
            storage: "15Gi"
          mountPath: "/var/lib/containerd"
          name: containerd
          storageClass: tanzu
        - capacity:
            storage: "15Gi"
          mountPath: "/var/lib/kubelet"
          name: kubelet
          storageClass: tanzu
      - name: ntp
        value: time.google.com
      - name: podSecurityStandard
        value:
          audit: restricted
          auditVersion: latest
          enforce: privileged
          enforceVersion: latest
          warn: privileged
          warnVersion: latest
      - name: storageClass
        value: tanzu
      - name: vmClass
        value: best-effort-small
# ADDITIONAL VALUES
      - name: kubeAPIServerFQDNs
        value:
          - workload-vsphere-tkg1.env1.lab.test
